version: '3.7'
services:
  mariadb:
    restart: always
    build: ./requirements/mariadb
    image: ft-mariadb
    networks:
      - mynet
    environment:
      - MYSQL_GROOT_HOST=%
      - MYSQL_GROOT_PASSWORD=${MYSQL_GROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./data_mysql:/var/lib/mysql


  wordpress:
    restart: always
    depends_on:
      - mariadb
      - redis
    build: ./requirements/wordpress
    image: wordpress
    networks:
      - mynet
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - WP_REDIS_HOST=${WP_REDIS_HOST}
    volumes:
      - ./data_wordpress:/var/www/app

  nginx:
    restart: always
    depends_on:
      - wordpress
    build: ./requirements/nginx
    image: ft-nginx
    networks:
      - mynet
    ports:
      - 443:443   # wordpress
      - 8080:8080 # adminer
      - 8081:8081 # Statiq website
    volumes:
      - ./data_wordpress:/var/www/app
      - ./data_adminer:/var/www/adminer
      - ./data_statiq:/var/www/statiq

# Bonus
  ftp:
    restart: always
    depends_on:
      - wordpress
    build: ./requirements/ftp
    image: ft-ftp
    networks:
      - mynet
    environment:
      - USER=${MYSQL_USER}
      - PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "21:21"
      - "20:20"
      - "20000-20009:20000-20009"
    volumes:
      - ./data_wordpress:/ftps_data

  adminer:
    restart: always
    depends_on:
      - mariadb
    build: ./requirements/adminer
    image: adminer
    networks:
      - mynet
    volumes:
      - ./data_adminer:/var/www/app

  statiq:
    restart: on-failure
    build: ./requirements/statiq
    image: statiq
    networks:
      - mynet
    volumes:
      - ./data_statiq:/app/output


  redis:
    restart: always
    build: ./requirements/redis
    image: ft-redis
    networks:
      - mynet      
  
  ddns:
    restart: always
    build: ./requirements/ddns
    image: ddns
    networks:
      - mynet      
    environment:
      - PROTOCOL=${PROTOCOL}
      - SERVER=${SERVER}
      - DAEMON=${DAEMON} # check every n seconds
      - LOGIN=${LOGIN}
      - PASSWORD=${PASSWORD}
      - DOMAIN_NAME=${DOMAIN_NAME}


volumes:
  data_wordpress: {}
  data_mysql: {}
  data_adminer: {}
  data_statiq: {}
networks:
  mynet:
